// <auto-generated />
using System;
using Logging.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Logging.Infrastructure.Migrations
{
    [DbContext(typeof(LoggerDbContext))]
    [Migration("20250730103449_Initial-Create")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Logging.Domain.Entities.AndroidLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AndroidBuildId")
                        .HasColumnType("longtext")
                        .HasColumnName("android_build_id");

                    b.Property<string>("AndroidDeviceModel")
                        .HasColumnType("longtext")
                        .HasColumnName("android_device_model");

                    b.Property<string>("AndroidManufacturer")
                        .HasColumnType("longtext")
                        .HasColumnName("android_manufacturer");

                    b.Property<string>("AndroidOsVersion")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("android_os_version");

                    b.Property<string>("AppState")
                        .HasColumnType("longtext")
                        .HasColumnName("app_state");

                    b.Property<string>("AppVersion")
                        .HasColumnType("longtext")
                        .HasColumnName("app_version");

                    b.Property<float?>("BatteryLevel")
                        .HasColumnType("float")
                        .HasColumnName("battery_level");

                    b.Property<string>("BatteryStatus")
                        .HasColumnType("longtext")
                        .HasColumnName("battery_status");

                    b.Property<string>("Breadcrumbs")
                        .HasColumnType("longtext")
                        .HasColumnName("breadcrumbs");

                    b.Property<string>("CpuInfo")
                        .HasColumnType("longtext")
                        .HasColumnName("cpu_info");

                    b.Property<float?>("CpuUsage")
                        .HasColumnType("float")
                        .HasColumnName("cpu_usage");

                    b.Property<bool>("CrashOccurred")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("crash_occurred");

                    b.Property<string>("DeviceInfo")
                        .HasColumnType("longtext")
                        .HasColumnName("device_info");

                    b.Property<string>("ExceptionMessage")
                        .HasColumnType("longtext")
                        .HasColumnName("exception_message");

                    b.Property<string>("ExceptionType")
                        .HasColumnType("longtext")
                        .HasColumnName("exception_type");

                    b.Property<string>("ExtraData")
                        .HasColumnType("longtext")
                        .HasColumnName("extra_data");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext")
                        .HasColumnName("file_name");

                    b.Property<string>("InnerExceptionMessage")
                        .HasColumnType("longtext")
                        .HasColumnName("inner_exception_message");

                    b.Property<string>("InnerExceptionType")
                        .HasColumnType("longtext")
                        .HasColumnName("inner_exception_type");

                    b.Property<string>("InnerStackTrace")
                        .HasColumnType("longtext")
                        .HasColumnName("inner_stack_trace");

                    b.Property<bool?>("IsRooted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_rooted");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("int")
                        .HasColumnName("line_number");

                    b.Property<string>("Locale")
                        .HasColumnType("longtext")
                        .HasColumnName("locale");

                    b.Property<string>("LogLevel")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("log_level");

                    b.Property<string>("MemoryUsage")
                        .HasColumnType("longtext")
                        .HasColumnName("memory_usage");

                    b.Property<string>("MemoryUsageDetails")
                        .HasColumnType("longtext")
                        .HasColumnName("memory_usage_details");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("message");

                    b.Property<string>("MethodName")
                        .HasColumnType("longtext")
                        .HasColumnName("method_name");

                    b.Property<string>("NetworkStatus")
                        .HasColumnType("longtext")
                        .HasColumnName("network_status");

                    b.Property<string>("NetworkType")
                        .HasColumnType("longtext")
                        .HasColumnName("network_type");

                    b.Property<string>("Orientation")
                        .HasColumnType("longtext")
                        .HasColumnName("orientation");

                    b.Property<string>("ScreenResolution")
                        .HasColumnType("longtext")
                        .HasColumnName("screen_resolution");

                    b.Property<string>("SessionId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("session_id");

                    b.Property<string>("Source")
                        .HasColumnType("longtext")
                        .HasColumnName("source");

                    b.Property<string>("StackTrace")
                        .HasColumnType("longtext")
                        .HasColumnName("stack_trace");

                    b.Property<string>("StorageFreeSpace")
                        .HasColumnType("longtext")
                        .HasColumnName("storage_free_space");

                    b.Property<int?>("ThreadId")
                        .HasColumnType("int")
                        .HasColumnName("thread_id");

                    b.Property<string>("ThreadName")
                        .HasColumnType("longtext")
                        .HasColumnName("thread_name");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("timestamp");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("AndroidOsVersion")
                        .HasDatabaseName("idx_android_os_version");

                    b.HasIndex("LogLevel")
                        .HasDatabaseName("idx_log_log_level");

                    b.HasIndex("SessionId")
                        .HasDatabaseName("idx_log_session_id");

                    b.HasIndex("Timestamp")
                        .HasDatabaseName("idx_log_timestamp");

                    b.HasIndex("UserId")
                        .HasDatabaseName("idx_log_user_id");

                    b.HasIndex("LogLevel", "Timestamp")
                        .HasDatabaseName("idx_log_level_timestamp");

                    b.ToTable("android_logs", (string)null);
                });

            modelBuilder.Entity("Logging.Domain.Entities.IOSLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AppState")
                        .HasColumnType("longtext")
                        .HasColumnName("app_state");

                    b.Property<string>("AppVersion")
                        .HasColumnType("longtext")
                        .HasColumnName("app_version");

                    b.Property<float?>("BatteryLevel")
                        .HasColumnType("float")
                        .HasColumnName("battery_level");

                    b.Property<string>("BatteryState")
                        .HasColumnType("longtext")
                        .HasColumnName("battery_state");

                    b.Property<string>("Breadcrumbs")
                        .HasColumnType("longtext")
                        .HasColumnName("breadcrumbs");

                    b.Property<string>("CpuInfo")
                        .HasColumnType("longtext")
                        .HasColumnName("cpu_info");

                    b.Property<float?>("CpuUsage")
                        .HasColumnType("float")
                        .HasColumnName("cpu_usage");

                    b.Property<bool>("CrashOccurred")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("crash_occurred");

                    b.Property<string>("DeviceInfo")
                        .HasColumnType("longtext")
                        .HasColumnName("device_info");

                    b.Property<string>("ExceptionMessage")
                        .HasColumnType("longtext")
                        .HasColumnName("exception_message");

                    b.Property<string>("ExceptionType")
                        .HasColumnType("longtext")
                        .HasColumnName("exception_type");

                    b.Property<string>("ExtraData")
                        .HasColumnType("longtext")
                        .HasColumnName("extra_data");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext")
                        .HasColumnName("file_name");

                    b.Property<string>("InnerExceptionMessage")
                        .HasColumnType("longtext")
                        .HasColumnName("inner_exception_message");

                    b.Property<string>("InnerExceptionType")
                        .HasColumnType("longtext")
                        .HasColumnName("inner_exception_type");

                    b.Property<string>("InnerStackTrace")
                        .HasColumnType("longtext")
                        .HasColumnName("inner_stack_trace");

                    b.Property<string>("IosBuildNumber")
                        .HasColumnType("longtext")
                        .HasColumnName("ios_build_number");

                    b.Property<string>("IosDeviceModel")
                        .HasColumnType("longtext")
                        .HasColumnName("ios_device_model");

                    b.Property<string>("IosOsVersion")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ios_os_version");

                    b.Property<bool?>("IsJailbroken")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_jailbroken");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("int")
                        .HasColumnName("line_number");

                    b.Property<string>("Locale")
                        .HasColumnType("longtext")
                        .HasColumnName("locale");

                    b.Property<string>("LogLevel")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("log_level");

                    b.Property<string>("MemoryUsage")
                        .HasColumnType("longtext")
                        .HasColumnName("memory_usage");

                    b.Property<string>("MemoryUsageDetails")
                        .HasColumnType("longtext")
                        .HasColumnName("memory_usage_details");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("message");

                    b.Property<string>("MethodName")
                        .HasColumnType("longtext")
                        .HasColumnName("method_name");

                    b.Property<string>("NetworkStatus")
                        .HasColumnType("longtext")
                        .HasColumnName("network_status");

                    b.Property<string>("NetworkType")
                        .HasColumnType("longtext")
                        .HasColumnName("network_type");

                    b.Property<string>("Orientation")
                        .HasColumnType("longtext")
                        .HasColumnName("orientation");

                    b.Property<string>("ScreenResolution")
                        .HasColumnType("longtext")
                        .HasColumnName("screen_resolution");

                    b.Property<string>("SessionId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("session_id");

                    b.Property<string>("Source")
                        .HasColumnType("longtext")
                        .HasColumnName("source");

                    b.Property<string>("StackTrace")
                        .HasColumnType("longtext")
                        .HasColumnName("stack_trace");

                    b.Property<string>("StorageFreeSpace")
                        .HasColumnType("longtext")
                        .HasColumnName("storage_free_space");

                    b.Property<int?>("ThreadId")
                        .HasColumnType("int")
                        .HasColumnName("thread_id");

                    b.Property<string>("ThreadName")
                        .HasColumnType("longtext")
                        .HasColumnName("thread_name");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("timestamp");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("IosOsVersion")
                        .HasDatabaseName("idx_ios_os_version");

                    b.HasIndex("LogLevel")
                        .HasDatabaseName("idx_log_log_level");

                    b.HasIndex("SessionId")
                        .HasDatabaseName("idx_log_session_id");

                    b.HasIndex("Timestamp")
                        .HasDatabaseName("idx_log_timestamp");

                    b.HasIndex("UserId")
                        .HasDatabaseName("idx_log_user_id");

                    b.HasIndex("LogLevel", "Timestamp")
                        .HasDatabaseName("idx_log_level_timestamp");

                    b.ToTable("ios_logs", (string)null);
                });

            modelBuilder.Entity("Logging.Domain.Entities.WebServiceLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AppState")
                        .HasColumnType("longtext")
                        .HasColumnName("app_state");

                    b.Property<string>("AppVersion")
                        .HasColumnType("longtext")
                        .HasColumnName("app_version");

                    b.Property<string>("Breadcrumbs")
                        .HasColumnType("longtext")
                        .HasColumnName("breadcrumbs");

                    b.Property<float?>("CpuUsage")
                        .HasColumnType("float")
                        .HasColumnName("cpu_usage");

                    b.Property<bool>("CrashOccurred")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("crash_occurred");

                    b.Property<string>("DeviceInfo")
                        .HasColumnType("longtext")
                        .HasColumnName("device_info");

                    b.Property<string>("Endpoint")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("endpoint");

                    b.Property<string>("ExceptionDetails")
                        .HasColumnType("longtext")
                        .HasColumnName("exception_details");

                    b.Property<string>("ExceptionMessage")
                        .HasColumnType("longtext")
                        .HasColumnName("exception_message");

                    b.Property<string>("ExceptionType")
                        .HasColumnType("longtext")
                        .HasColumnName("exception_type");

                    b.Property<string>("ExtraData")
                        .HasColumnType("longtext")
                        .HasColumnName("extra_data");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext")
                        .HasColumnName("file_name");

                    b.Property<string>("HttpMethod")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("http_method");

                    b.Property<int?>("HttpStatusCode")
                        .HasColumnType("int")
                        .HasColumnName("http_status_code");

                    b.Property<string>("InnerExceptionMessage")
                        .HasColumnType("longtext")
                        .HasColumnName("inner_exception_message");

                    b.Property<string>("InnerExceptionType")
                        .HasColumnType("longtext")
                        .HasColumnName("inner_exception_type");

                    b.Property<string>("InnerStackTrace")
                        .HasColumnType("longtext")
                        .HasColumnName("inner_stack_trace");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("ip_address");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("int")
                        .HasColumnName("line_number");

                    b.Property<string>("Locale")
                        .HasColumnType("longtext")
                        .HasColumnName("locale");

                    b.Property<string>("LogLevel")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("log_level");

                    b.Property<string>("MemoryUsageDetails")
                        .HasColumnType("longtext")
                        .HasColumnName("memory_usage_details");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("message");

                    b.Property<string>("MethodName")
                        .HasColumnType("longtext")
                        .HasColumnName("method_name");

                    b.Property<string>("NetworkStatus")
                        .HasColumnType("longtext")
                        .HasColumnName("network_status");

                    b.Property<string>("Referrer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("referrer");

                    b.Property<string>("RequestBody")
                        .HasColumnType("longtext")
                        .HasColumnName("request_body");

                    b.Property<string>("ResponseBody")
                        .HasColumnType("longtext")
                        .HasColumnName("response_body");

                    b.Property<long?>("ResponseTimeMs")
                        .HasColumnType("bigint")
                        .HasColumnName("response_time_ms");

                    b.Property<string>("SessionId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("session_id");

                    b.Property<string>("Source")
                        .HasColumnType("longtext")
                        .HasColumnName("source");

                    b.Property<string>("StackTrace")
                        .HasColumnType("longtext")
                        .HasColumnName("stack_trace");

                    b.Property<int?>("ThreadId")
                        .HasColumnType("int")
                        .HasColumnName("thread_id");

                    b.Property<string>("ThreadName")
                        .HasColumnType("longtext")
                        .HasColumnName("thread_name");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("timestamp");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("user_agent");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("Endpoint")
                        .HasDatabaseName("idx_web_endpoint");

                    b.HasIndex("HttpStatusCode")
                        .HasDatabaseName("idx_web_http_status");

                    b.HasIndex("LogLevel")
                        .HasDatabaseName("idx_log_log_level");

                    b.HasIndex("SessionId")
                        .HasDatabaseName("idx_log_session_id");

                    b.HasIndex("Timestamp")
                        .HasDatabaseName("idx_log_timestamp");

                    b.HasIndex("UserId")
                        .HasDatabaseName("idx_log_user_id");

                    b.HasIndex("Endpoint", "HttpStatusCode")
                        .HasDatabaseName("idx_endpoint_status");

                    b.HasIndex("LogLevel", "Timestamp")
                        .HasDatabaseName("idx_log_level_timestamp");

                    b.ToTable("web_service_logs", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
