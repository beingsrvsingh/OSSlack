// <auto-generated />
using System;
using Kathavachak.Infrastructure.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kathavachak.Infrastructure.Migrations
{
    [DbContext(typeof(KathavachakDbContext))]
    [Migration("20250908123219_Initial-Create-1")]
    partial class InitialCreate1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Kathavachak.Domain.Entities.KathavachakExpertise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("cat_id");

                    b.Property<string>("CategoryNameSnapshot")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cat_snap");

                    b.Property<int>("KathavachakId")
                        .HasColumnType("int")
                        .HasColumnName("kathavachak_id");

                    b.Property<string>("ProficiencyLevel")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("proficiency_level");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("subcat_id");

                    b.Property<string>("SubCategoryNameSnapshot")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("subcat_snap");

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("int")
                        .HasColumnName("yrs_of_exp");

                    b.HasKey("Id");

                    b.HasIndex("KathavachakId");

                    b.ToTable("kathavachak_experties", (string)null);
                });

            modelBuilder.Entity("Kathavachak.Domain.Entities.KathavachakLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KathavachakId")
                        .HasColumnType("int")
                        .HasColumnName("kathavachak_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int")
                        .HasColumnName("language_id");

                    b.HasKey("Id");

                    b.HasIndex("KathavachakId");

                    b.HasIndex("LanguageId");

                    b.ToTable("kathavachak_language", (string)null);
                });

            modelBuilder.Entity("Kathavachak.Domain.Entities.KathavachakMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AverageRating")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(3,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("average_rating");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true)
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.Property<string>("ProfilePictureUrl")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("profile_picture_url");

                    b.Property<int>("TotalRatings")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("total_ratings");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.ToTable("kathavachak_master", (string)null);
                });

            modelBuilder.Entity("Kathavachak.Domain.Entities.KathavachakMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("description");

                    b.Property<int>("KathavachakId")
                        .HasColumnType("int")
                        .HasColumnName("kathavachak_id");

                    b.Property<int>("MediaType")
                        .HasMaxLength(50)
                        .HasColumnType("int")
                        .HasColumnName("media_type");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("url");

                    b.HasKey("Id");

                    b.HasIndex("KathavachakId");

                    b.ToTable("kathavachak_media", (string)null);
                });

            modelBuilder.Entity("Kathavachak.Domain.Entities.KathavachakSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("end_date");

                    b.Property<bool>("IsAvailable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true)
                        .HasColumnName("is_available");

                    b.Property<bool>("IsRecurring")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true)
                        .HasColumnName("is_recurring");

                    b.Property<int>("KathavachakId")
                        .HasColumnType("int")
                        .HasColumnName("kathavachak_id");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("start_date");

                    b.HasKey("Id");

                    b.HasIndex("KathavachakId");

                    b.ToTable("kathavachak_schedule", (string)null);
                });

            modelBuilder.Entity("Kathavachak.Domain.Entities.KathavachakSearchRaw", b =>
                {
                    b.Property<float?>("CatScore")
                        .HasColumnType("float");

                    b.Property<string>("CatSnap")
                        .HasColumnType("longtext");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<float?>("NameScore")
                        .HasColumnType("float");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<float?>("SubcatScore")
                        .HasColumnType("float");

                    b.Property<string>("SubcatSnap")
                        .HasColumnType("longtext");

                    b.Property<int>("SubcategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ThumbnailUrl")
                        .HasColumnType("longtext");

                    b.Property<float?>("TotalScore")
                        .HasColumnType("float");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Kathavachak.Domain.Entities.KathavachakSessionMode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KathavachakId")
                        .HasColumnType("int")
                        .HasColumnName("kathavachak_id");

                    b.Property<int>("Mode")
                        .HasMaxLength(100)
                        .HasColumnType("int")
                        .HasColumnName("mode_name");

                    b.HasKey("Id");

                    b.HasIndex("KathavachakId");

                    b.ToTable("kathavachak_session_mode", (string)null);
                });

            modelBuilder.Entity("Kathavachak.Domain.Entities.KathavachakTimeSlot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int")
                        .HasColumnName("day_of_week");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time(6)")
                        .HasColumnName("end_time");

                    b.Property<bool>("IsBooked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_booked");

                    b.Property<int>("KathavachakId")
                        .HasColumnType("int")
                        .HasColumnName("kathavachak_id");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time(6)")
                        .HasColumnName("start_time");

                    b.HasKey("Id");

                    b.HasIndex("KathavachakId");

                    b.ToTable("kathavachak_time_slot", (string)null);
                });

            modelBuilder.Entity("Kathavachak.Domain.Entities.KathavachakTopic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("KathavachakId")
                        .HasColumnType("int")
                        .HasColumnName("kathavachak_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("topic_name");

                    b.HasKey("Id");

                    b.HasIndex("KathavachakId");

                    b.ToTable("kathavachak_topic", (string)null);
                });

            modelBuilder.Entity("Kathavachak.Domain.Entities.LanguageMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int")
                        .HasColumnName("display_order");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("language_code");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("languages", (string)null);
                });

            modelBuilder.Entity("Kathavachak.Domain.Entities.KathavachakExpertise", b =>
                {
                    b.HasOne("Kathavachak.Domain.Entities.KathavachakMaster", "Kathavachak")
                        .WithMany("Expertises")
                        .HasForeignKey("KathavachakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kathavachak");
                });

            modelBuilder.Entity("Kathavachak.Domain.Entities.KathavachakLanguage", b =>
                {
                    b.HasOne("Kathavachak.Domain.Entities.KathavachakMaster", "Kathavachak")
                        .WithMany("Languages")
                        .HasForeignKey("KathavachakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_kathavachak_language_kathavachak_id");

                    b.HasOne("Kathavachak.Domain.Entities.LanguageMaster", "Language")
                        .WithMany("KathavachakLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_kathavachak_language_language_id");

                    b.Navigation("Kathavachak");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Kathavachak.Domain.Entities.KathavachakMedia", b =>
                {
                    b.HasOne("Kathavachak.Domain.Entities.KathavachakMaster", "Kathavachak")
                        .WithMany("Media")
                        .HasForeignKey("KathavachakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kathavachak");
                });

            modelBuilder.Entity("Kathavachak.Domain.Entities.KathavachakSchedule", b =>
                {
                    b.HasOne("Kathavachak.Domain.Entities.KathavachakMaster", "Kathavachak")
                        .WithMany("Schedules")
                        .HasForeignKey("KathavachakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kathavachak");
                });

            modelBuilder.Entity("Kathavachak.Domain.Entities.KathavachakSessionMode", b =>
                {
                    b.HasOne("Kathavachak.Domain.Entities.KathavachakMaster", "Kathavachak")
                        .WithMany("SessionModes")
                        .HasForeignKey("KathavachakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kathavachak");
                });

            modelBuilder.Entity("Kathavachak.Domain.Entities.KathavachakTimeSlot", b =>
                {
                    b.HasOne("Kathavachak.Domain.Entities.KathavachakMaster", "Kathavachak")
                        .WithMany("TimeSlots")
                        .HasForeignKey("KathavachakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kathavachak");
                });

            modelBuilder.Entity("Kathavachak.Domain.Entities.KathavachakTopic", b =>
                {
                    b.HasOne("Kathavachak.Domain.Entities.KathavachakMaster", "Kathavachak")
                        .WithMany("Topics")
                        .HasForeignKey("KathavachakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kathavachak");
                });

            modelBuilder.Entity("Kathavachak.Domain.Entities.KathavachakMaster", b =>
                {
                    b.Navigation("Expertises");

                    b.Navigation("Languages");

                    b.Navigation("Media");

                    b.Navigation("Schedules");

                    b.Navigation("SessionModes");

                    b.Navigation("TimeSlots");

                    b.Navigation("Topics");
                });

            modelBuilder.Entity("Kathavachak.Domain.Entities.LanguageMaster", b =>
                {
                    b.Navigation("KathavachakLanguages");
                });
#pragma warning restore 612, 618
        }
    }
}
