// <auto-generated />
using System;
using AstrologerMicroservice.Infrastructure.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AstrologerMicroservice.Infrastructure.Migrations
{
    [DbContext(typeof(AstrologerDbContext))]
    partial class AstrologerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AstrologerMicroservice.Domain.Entities.Astrologer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AverageRating")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(3,2)")
                        .HasDefaultValue(0m);

                    b.Property<int>("ConsultationModes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("ProfilePictureUrl")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("TotalRatings")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.HasKey("Id");

                    b.ToTable("astrologers", (string)null);
                });

            modelBuilder.Entity("AstrologerMicroservice.Domain.Entities.AstrologerExpertise", b =>
                {
                    b.Property<int>("AstrologerId")
                        .HasColumnType("int");

                    b.Property<int>("ExpertiseId")
                        .HasColumnType("int");

                    b.HasKey("AstrologerId", "ExpertiseId");

                    b.HasIndex("ExpertiseId");

                    b.ToTable("astrologer_expertises", (string)null);
                });

            modelBuilder.Entity("AstrologerMicroservice.Domain.Entities.AstrologerLanguage", b =>
                {
                    b.Property<int>("AstrologerId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("AstrologerId", "LanguageId");

                    b.HasIndex("LanguageId");

                    b.ToTable("astrologer_languages", (string)null);
                });

            modelBuilder.Entity("AstrologerMicroservice.Domain.Entities.Expertise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("expertises", (string)null);
                });

            modelBuilder.Entity("AstrologerMicroservice.Domain.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("languages", (string)null);
                });

            modelBuilder.Entity("AstrologerMicroservice.Domain.Entities.ProductItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AstrologerId")
                        .HasColumnType("int")
                        .HasColumnName("astrologer_id");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("price");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AstrologerId")
                        .HasDatabaseName("ix_product_items_astrologer");

                    b.ToTable("product_items", (string)null);
                });

            modelBuilder.Entity("AstrologerMicroservice.Domain.Entities.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AstrologerId")
                        .HasColumnType("int")
                        .HasColumnName("astrologer_id");

                    b.Property<int>("Day")
                        .HasColumnType("int")
                        .HasColumnName("day_of_week");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time(6)")
                        .HasColumnName("end_time");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("tinyint(1)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time(6)")
                        .HasColumnName("start_time");

                    b.HasKey("Id");

                    b.HasIndex("AstrologerId", "Day")
                        .HasDatabaseName("ix_schedules_astrologer_day");

                    b.ToTable("schedules", (string)null);
                });

            modelBuilder.Entity("AstrologerMicroservice.Domain.Entities.ServiceCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AdditionalPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("additional_price");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true)
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<int>("ServicePackageId")
                        .HasColumnType("int")
                        .HasColumnName("service_package_id");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .HasDatabaseName("ix_service_categories_name");

                    b.HasIndex("ServicePackageId");

                    b.ToTable("service_categories", (string)null);
                });

            modelBuilder.Entity("AstrologerMicroservice.Domain.Entities.ServicePackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AstrologerId")
                        .HasColumnType("int")
                        .HasColumnName("astrologer_id");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time(6)")
                        .HasColumnName("duration");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true)
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price");

                    b.HasKey("Id");

                    b.HasIndex("AstrologerId")
                        .HasDatabaseName("ix_service_packages_astrologer_id");

                    b.ToTable("service_packages", (string)null);
                });

            modelBuilder.Entity("AstrologerMicroservice.Domain.Entities.TimeSlot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AstrologerId")
                        .HasColumnType("int")
                        .HasColumnName("astrologer_id");

                    b.Property<DateTime>("EndUtc")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("end_utc");

                    b.Property<bool>("IsBooked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_booked");

                    b.Property<DateTime>("StartUtc")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("start_utc");

                    b.HasKey("Id");

                    b.HasIndex("AstrologerId")
                        .HasDatabaseName("ix_time_slots_astrologer_id");

                    b.ToTable("time_slots", (string)null);
                });

            modelBuilder.Entity("AstrologerMicroservice.Domain.Entities.AstrologerExpertise", b =>
                {
                    b.HasOne("AstrologerMicroservice.Domain.Entities.Astrologer", "Astrologer")
                        .WithMany("AstrologerExpertises")
                        .HasForeignKey("AstrologerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_astrologer_expertise_astrologer_id");

                    b.HasOne("AstrologerMicroservice.Domain.Entities.Expertise", "Expertise")
                        .WithMany("AstrologerExpertises")
                        .HasForeignKey("ExpertiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_astrologer_expertise_expertise_id");

                    b.Navigation("Astrologer");

                    b.Navigation("Expertise");
                });

            modelBuilder.Entity("AstrologerMicroservice.Domain.Entities.AstrologerLanguage", b =>
                {
                    b.HasOne("AstrologerMicroservice.Domain.Entities.Astrologer", "Astrologer")
                        .WithMany("AstrologerLanguages")
                        .HasForeignKey("AstrologerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_astrologer_language_astrologer_id");

                    b.HasOne("AstrologerMicroservice.Domain.Entities.Language", "Language")
                        .WithMany("AstrologerLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_astrologer_language_language_id");

                    b.Navigation("Astrologer");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("AstrologerMicroservice.Domain.Entities.ProductItem", b =>
                {
                    b.HasOne("AstrologerMicroservice.Domain.Entities.Astrologer", "Astrologer")
                        .WithMany("ProductItems")
                        .HasForeignKey("AstrologerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Astrologer");
                });

            modelBuilder.Entity("AstrologerMicroservice.Domain.Entities.Schedule", b =>
                {
                    b.HasOne("AstrologerMicroservice.Domain.Entities.Astrologer", "Astrologer")
                        .WithMany("Schedules")
                        .HasForeignKey("AstrologerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Astrologer");
                });

            modelBuilder.Entity("AstrologerMicroservice.Domain.Entities.ServiceCategory", b =>
                {
                    b.HasOne("AstrologerMicroservice.Domain.Entities.ServicePackage", "ServicePackage")
                        .WithMany("ServiceCategories")
                        .HasForeignKey("ServicePackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServicePackage");
                });

            modelBuilder.Entity("AstrologerMicroservice.Domain.Entities.ServicePackage", b =>
                {
                    b.HasOne("AstrologerMicroservice.Domain.Entities.Astrologer", "Astrologer")
                        .WithMany("ServicePackages")
                        .HasForeignKey("AstrologerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Astrologer");
                });

            modelBuilder.Entity("AstrologerMicroservice.Domain.Entities.TimeSlot", b =>
                {
                    b.HasOne("AstrologerMicroservice.Domain.Entities.Astrologer", "Astrologer")
                        .WithMany("TimeSlots")
                        .HasForeignKey("AstrologerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Astrologer");
                });

            modelBuilder.Entity("AstrologerMicroservice.Domain.Entities.Astrologer", b =>
                {
                    b.Navigation("AstrologerExpertises");

                    b.Navigation("AstrologerLanguages");

                    b.Navigation("ProductItems");

                    b.Navigation("Schedules");

                    b.Navigation("ServicePackages");

                    b.Navigation("TimeSlots");
                });

            modelBuilder.Entity("AstrologerMicroservice.Domain.Entities.Expertise", b =>
                {
                    b.Navigation("AstrologerExpertises");
                });

            modelBuilder.Entity("AstrologerMicroservice.Domain.Entities.Language", b =>
                {
                    b.Navigation("AstrologerLanguages");
                });

            modelBuilder.Entity("AstrologerMicroservice.Domain.Entities.ServicePackage", b =>
                {
                    b.Navigation("ServiceCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
